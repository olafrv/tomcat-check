#summary The installation, configuration and running procedure
#labels Featured,Phase-Deploy

= Binaries and Configuration Files =

==/etc/tomcat-check.xml==

The well formed XML configuration file.  Download an example [http://tomcat-check.googlecode.com/files/tomcat-check.xml here].

Permission of this file must be *0770* with owner and group equal to *root*, this is because in general it include Apache Tomcat Manager access passwords.

The _structure_ of the file is just like this:

{{{

<?xml version="1.0" encoding="utf-8"?>
<servers cycle="20" syslog="on" daemon="on" debug="off" debuglevel="2" mail="on">
  <server ip="192.168.1.1" port="8080" user="admin" password="123456">
    <checks>
      <check number="1" command="status" param="requestProcessingTime" type="range" min="0" max="30000">
        <alarm mailto="root@localhost"/>
      </check>
      <check number="2" command="status" param="requestProcessingTime" type="range" min="0" max="60000">
        <alarm mailto="root@localhost,admin@localhost"/>
      </check>
    </checks>
  </server>
  <server ip="192.168.1.2" port="8080" user="admin" password="456789">
    <checks>
      <check number="1" command="status" param="requestProcessingTime" type="range" min="0" max="30000">
        <alarm mailto="root@localhost"/>
      </check>
      <check number="2" command="status" param="requestProcessingTime" type="range" min="0" max="60000">
        <alarm mailto="root@localhost,admin@localhost"/>
      </check>
    </checks>
  </server>
 </servers>

}}}

===XML Tags and Attributes===

*servers*: contains the list of tomcat server instances to check. 
  * *_cycle_* is the number of second after all check must be performed.
  * *_syslog_* whether or not to send ouput to syslog.
  * *_daemon_* whether or not to run in background as a daemon.
  * *_debug_* whether or not to print debug messages.
  * *_debuglevel_* from 0 to 10.

*server*: contains the 

*checks*

*check*

*alarm*

==/usr/bin/tomcat-check.pl==

The main perl script (daemon). Permission of this file must be 0755 with owner and group equal to *root*.

To run the daemon executes as root after creating the configuration file:

{{{
# tomcat-check.pl
}}} 

----

=Temporal Files=

==/var/run/tomcat-check.pid==

The tomcat-check process pid file.

==/tmp/tomcat-check-status.xml==

A temporal file to store the output downloaded from Apache Tomcat Manager *[http://user:password@host:port/manager/status?XML=true]* each time a check is performed by the main perl script.

The _structure_ of the file is just like this:

{{{

<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="xform.xsl" ?>
<status>
  <jvm>
    <memory free='526635632' total='1247674368' max='2386100224'/>
  </jvm>
  <connector name='http-8080'>
    <threadInfo  maxThreads="-1" currentThreadCount="-1" currentThreadsBusy="-1" />
    <requestInfo  maxTime="1219" processingTime="20939" requestCount="9213" errorCount="2" bytesReceived="0" bytesSent="28152767" />
    <workers>
       <worker  stage="S" requestProcessingTime="0" requestBytesSent="0" requestBytesReceived="0" remoteAddr="172.26.96.230" virtualHost="172.26.96.247" method="GET" currentUri="/manager/status" currentQueryString="XML=true" protocol="HTTP/1.1" />
    </workers>
  </connector>
  <connector name='ajp-8009'>
     <threadInfo  maxThreads="200" currentThreadCount="9" currentThreadsBusy="0" />
     <requestInfo  maxTime="2120690" processingTime="7325693" requestCount="108185" errorCount="15353" bytesReceived="1590291" bytesSent="859328855" />
     <workers>
        <worker  stage="R" requestProcessingTime="0" requestBytesSent="0" requestBytesRecieved="0" remoteAddr="&#63;" virtualHost="&#63;" method="&#63;" currentUri="&#63;" currentQueryString="&#63;" protocol="&#63;" />
     </workers>
   </connector>
</status>

}}}